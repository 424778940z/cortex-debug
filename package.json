{
	"name": "cortex-debug",
	"displayName": "ARM Cortex-M Debug",
	"description": "ARM Cortex-M GDB Debugger support for VSCode",
	"keywords": [
		"cortex-m",
		"gdb",
		"debug",
		"embedded"
	],
	"version": "0.1.0",
	"publisher": "marus",
	"icon": "images/icon.png",
	"engines": {
		"vscode": "^1.18.0"
	},
	"main": "./out/src/frontend/extension",
	"activationEvents": [
		"onCommand:cortex-debug.getFileNameNoExt",
		"onCommand:cortex-debug.getFileBasenameNoExt",
		"*"
	],
	"categories": [
		"Debuggers"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/WebFreak001/code-debug.git"
	},
	"contributes": {
		"commands": [
			{
				"command": "cortexPerhiperals.refresh",
				"title": "Refresh All"
			},
			{
				"command": "cortexPerhiperals.refreshNode",
				"title": "Refresh"
			},
			{
				"command": "cortexPerhiperals.updateNode",
				"title": "Update"
			},
			{
				"command": "cortexPerhiperals.selectedNode",
				"title": "Selected"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "cortexPerhiperals.refresh",
					"when": "view == cortexPerhiperalsDisabled",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "cortexPerhiperals.refreshNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == registerRW"
				},
				{
					"command": "cortexPerhiperals.refreshNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == registerRO"
				},
				{
					"command": "cortexPerhiperals.refreshNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == registerWO"
				},
				{
					"command": "cortexPerhiperals.refreshNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == perhiperal"
				},
				{
					"command": "cortexPerhiperals.updateNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == field"
				},
				{
					"command": "cortexPerhiperals.updateNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == registerRW"
				},
				{
					"command": "cortexPerhiperals.updateNode",
					"when": "view == cortexPerhiperalsDisabled && viewItem == registerWO"
				}
			]
		},
		"views": {
			"debug": [
				{
					"id": "cortexPerhiperals",
					"name": "Cortex Perhiperals"
				},
				{
					"id": "cortexRegisters",
					"name": "Cortex Registers"
				}
			]
		},
		"debuggers": [
			{
				"type": "jlink-gdb",
				"extensions": [],
				"program": "./out/src/jlink.js",
				"runtime": "node",
				"label": "Cortex Debug: JLink",
				"enableBreakpointsFor": {
					"languageIds": [
						"c",
						"cpp",
						"asm"
					]
				},
				"variables": {
					"FileBasenameNoExt": "cortex-debug.getFileBasenameNoExt",
					"FileNameNoExt": "cortex-debug.getFileNameNoExt"
				},
				"configurationAttributes": {
					"launch": {
						"required": [
							"executable",
							"device"
						],
						"properties": {
							"gdbpath": {
								"type": "string",
								"description": "Path to the gdb executable or the command if in PATH",
								"default": "arm-none-eabi-gdb"
							},
							"executable": {
								"type": "string",
								"description": "Path of executable"
							},
							"cwd": {
								"type": "string",
								"description": "Path of project"
							},
							"jlinkpath": {
								"type": "string",
								"description": "Path to the JLink",
								"default": "JLinkGDBServer"
							},
							"device": {
								"type": "string",
								"description": "JLink Device Identifier",
								"default": "STM32F103RB"
							},
							"debugger_args": {
								"type": "array",
								"description": "Additional arguments to pass to GDB",
								"default": []
							},
							"valuesFormatting": {
								"type": "string",
								"description": "Set the way of showing variable values. 'disabled' - show value as is, 'parseText' - parse debuggers output text into structure, 'prettyPrinters' - enable debuggers custom pretty-printers if there are any",
								"default": "parseText",
								"enum": [
									"disabled",
									"parseText",
									"prettyPrinters"
								]
							},
							"printCalls": {
								"type": "boolean",
								"description": "Prints all GDB calls to the console",
								"default": false
							},
							"showDevDebugOutput": {
								"type": "boolean",
								"description": "Prints all GDB responses to the console",
								"default": false
							},
							"autorun": {
								"type": "array",
								"description": "GDB commands to run when starting to debug",
								"default": []
							},
							"svdFile": {
								"type": "string",
								"description": "Path to an SVD file describing the peripherals of the microcontroller; if not supplied then one may be selected based upon the 'device' entered.",
								"default": null
							},
							"graphConfig": {
								"type": "array",
								"items": {
									"oneOf": [
										{
											"type": "object",
											"properties": {
												"type": {
													"type": "string",
													"enum": [
														"realtime"
													]
												},
												"minimum": {
													"type": "number",
													"default": 0,
													"description": "Minimum value for the Y-Axis"
												},
												"maximum": {
													"type": "maximum",
													"default": 65535,
													"description": "Maximum value for the X-Axis"
												},
												"ports": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"number": {
																"type": "number",
																"minimum": 0,
																"maximum": 31,
																"description": "The SWO port number",
																"default": 0
															},
															"label": {
																"type": "string",
																"description": "A label for this data set"
															},
															"color": {
																"type": "string",
																"pattern": "^#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$"
															}
														},
														"required": [
															"number"
														]
													},
													"description": "SWO Port configuration. Ports selected must be configured as a \"graph\" format port in the \"swoConfig\" section"
												},
												"label": {
													"type": "string",
													"description": "Label for Graph"
												}
											}
										},
										{
											"type": "object",
											"properties": {
												"type": {
													"type": "string",
													"enum": [
														"x-y-plot"
													]
												},
												"x-port": {
													"type": "number",
													"description": "SWO Port for the X axis"
												},
												"y-port": {
													"type": "number",
													"description": "SWO Port for the Y axis"
												},
												"label": {
													"type": "string",
													"description": "Label for graph"
												}
											}
										}
									]
								}
							},
							"swoConfig": {
								"type": "object",
								"properties": {
									"enabled": {
										"type": "boolean",
										"default": false,
										"description": "Enable SWO decoding."
									},
									"swoFrequency": {
										"type": "number",
										"default": 0,
										"description": "SWO frequency in Hz; 0 will attempt to automatically calculate"
									},
									"cpuFrequency": {
										"type": "number",
										"default": 0,
										"description": "Target CPU frequency in Hz; 0 will attempt to automatically calculate"
									},
									"ports": {
										"type": "array",
										"description": "SWO Port Configuration",
										"items": {
											"type": "object",
											"properties": {
												"number": {
													"type": "number",
													"description": "SWO Port Number",
													"minimum": 0,
													"maximum": 31
												},
												"encoding": {
													"type": "string",
													"description": "This property is only used for binary and graph output formats.",
													"default": "unsigned",
													"enum": [
														"unsigned",
														"signed",
														"q16.16",
														"q24.8",
														"float"
													]
												}
											},
											"required": [
												"number",
												"format"
											]
										}
									}
								},
								"required": []
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Debug",
						"type": "jlink-gdb",
						"request": "launch",
						"executable": "./bin/executable",
						"cwd": "${workspaceRoot}"
					}
				],
				"configurationSnippets": [
					{
						"label": "Cortex Debug: JLink",
						"description": "Debugs an embedded ARM Cortex-M microcontroller using GDB",
						"body": {
							"type": "jlink-gdb",
							"request": "launch",
							"name": "${6:Debug Microcontroller}",
							"executable": "${1:./bin/executable.elf}",
							"cwd": "^\"\\${workspaceRoot}\"",
							"autorun": []
						}
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"dependencies": {
		"binary-parser": "^1.3.0",
		"cbarrick-circular-buffer": "^1.2.3",
		"d3": "^4.12.0",
		"portastic": "^1.0.1",
		"vscode-debugadapter": "^1.16.0",
		"vscode-debugprotocol": "^1.16.0",
		"ws": "^3.3.2",
		"xml2js": "^0.4.19"
	},
	"devDependencies": {
		"typescript": "^2.1.6",
		"vscode": "^1.0.0",
		"mocha": "^3.2.0",
		"@types/node": "^7.0.5",
		"@types/mocha": "^2.2.39"
	}
}
